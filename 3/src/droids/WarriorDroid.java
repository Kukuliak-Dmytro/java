package droids;

/**
 * –ö–ª–∞—Å –≤–æ—ó–Ω–∞-–¥—Ä–æ—ó–¥–∞ –∑ –≤–∏—Å–æ–∫–∏–º —É—Ä–æ–Ω–æ–º —Ç–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–º–∏ –∑–¥—ñ–±–Ω–æ—Å—Ç—è–º–∏:
 * - –ö—Ä–∏—Ç–∏—á–Ω–∏–π —É–¥–∞—Ä (15% —à–∞–Ω—Å –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ —É—Ä–æ–Ω—É)
 * - –ë–µ—Ä—Å–µ—Ä–∫ (–ø—Ä–∏ HP < 30% –æ—Ç—Ä–∏–º—É—î +50% —É—Ä–æ–Ω—É)
 */
public class WarriorDroid extends Droid {
    private static final double CRIT_CHANCE = 0.15; // 15% —à–∞–Ω—Å –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ —É–¥–∞—Ä—É
    private static final double BERSERK_THRESHOLD = 0.3; // –ü—Ä–∏ 30% HP
    private static final double BERSERK_DAMAGE_BONUS = 0.5; // +50% —É—Ä–æ–Ω—É
    
    public WarriorDroid(String name) {
        // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–≥—ñ–¥–Ω–æ –∑ –ø–ª–∞–Ω–æ–º: –≤–∏—Å–æ–∫–∏–π —É—Ä–æ–Ω, —Å–µ—Ä–µ–¥–Ω—î HP, –≤–∏—Å–æ–∫–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å, —Å–µ—Ä–µ–¥–Ω—è —à–≤–∏–¥–∫—ñ—Å—Ç—å
        super(name, 135, 35, 0.85, 13);
    }
    
    @Override
    protected int applySpecialAttackAbility(int damage, Droid target) {
        int finalDamage = damage;
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–µ—Ä—Å–µ—Ä–∫ (–ø—Ä–∏ –Ω–∏–∑—å–∫–æ–º—É HP)
        if (health < maxHealth * BERSERK_THRESHOLD) {
            finalDamage = (int) (finalDamage * (1 + BERSERK_DAMAGE_BONUS));
            System.out.println(name + " –≤—Ö–æ–¥–∏—Ç—å –≤ –ë–ï–†–°–ï–†–ö! (+50% —É—Ä–æ–Ω—É)");
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω–∏–π —É–¥–∞—Ä
        if (random.nextDouble() < CRIT_CHANCE) {
            finalDamage *= 2;
            System.out.println(name + " –∑–∞–≤–¥–∞—î –ö–†–ò–¢–ò–ß–ù–ò–ô –£–î–ê–†! (—É—Ä–æ–Ω –ø–æ–¥–≤–æ—î–Ω–∏–π)");
        }
        
        return finalDamage;
    }
    
    @Override
    protected int applySpecialDefenseAbility(int incomingDamage) {
        // –£ –≤–æ—ó–Ω–∞ –Ω–µ–º–∞—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö –∑–∞—Ö–∏—Å–Ω–∏—Ö –∑–¥—ñ–±–Ω–æ—Å—Ç–µ–π
        return incomingDamage;
    }
    
    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∞–∫—Ç–∏–≤–Ω–∏–π —Ä–µ–∂–∏–º –±–µ—Ä—Å–µ—Ä–∫–∞
     */
    public boolean isBerserk() {
        return health < maxHealth * BERSERK_THRESHOLD;
    }
    
    @Override
    public String getInfo() {
        String baseInfo = super.getInfo();
        StringBuilder additionalInfo = new StringBuilder(baseInfo);
        
        additionalInfo.append("\n  –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∑–¥—ñ–±–Ω–æ—Å—Ç—ñ:");
        additionalInfo.append(String.format("\n  - –ö—Ä–∏—Ç–∏—á–Ω–∏–π —É–¥–∞—Ä: %.0f%% —à–∞–Ω—Å –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ —É—Ä–æ–Ω—É", CRIT_CHANCE * 100));
        additionalInfo.append(String.format("\n  - –ë–µ—Ä—Å–µ—Ä–∫: +%.0f%% —É—Ä–æ–Ω—É –ø—Ä–∏ HP < %.0f%%", 
                            BERSERK_DAMAGE_BONUS * 100, BERSERK_THRESHOLD * 100));
        
        if (isBerserk()) {
            additionalInfo.append("\n  üî• –†–ï–ñ–ò–ú –ë–ï–†–°–ï–†–ö–ê –ê–ö–¢–ò–í–ù–ò–ô!");
        }
        
        return additionalInfo.toString();
    }
}