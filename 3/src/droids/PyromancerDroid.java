package droids;

import effects.FireEffect;
import effects.DamageBuffEffect;

/**
 * –ö–ª–∞—Å –ø—ñ—Ä–æ–º–∞–Ω—Ç-–¥—Ä–æ—ó–¥–∞ –∑ –≤–æ–≥–Ω—è–Ω–∏–º–∏ –∞—Ç–∞–∫–∞–º–∏ —Ç–∞ –ø—ñ–¥—Å–∏–ª–µ–Ω–Ω—è–º —É—Ä–æ–Ω—É:
 * - –í–æ–≥–Ω—è–Ω—ñ –∞—Ç–∞–∫–∏ (30% —à–∞–Ω—Å –ø—ñ–¥–ø–∞–ª–∏—Ç–∏ —Ü—ñ–ª—å)
 * - –°–∞–º–æ–ø—ñ–¥—Å–∏–ª–µ–Ω–Ω—è (–º–æ–∂–µ –ø—ñ–¥–≤–∏—â–∏—Ç–∏ —Å–≤—ñ–π —É—Ä–æ–Ω –Ω–∞ 25% –Ω–∞ 4 —Ö–æ–¥–∏)
 * - –í–æ–≥–Ω—è–Ω–∏–π —â–∏—Ç (–ø—Ä–∏ –Ω–∏–∑—å–∫–æ–º—É HP –æ—Ç—Ä–∏–º—É—î –∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ –≤–æ–≥–Ω—é)
 */
public class PyromancerDroid extends Droid {
    private static final double FIRE_CHANCE = 0.30; // 30% —à–∞–Ω—Å –ø—ñ–¥–ø–∞–ª–∏—Ç–∏
    private static final int FIRE_DAMAGE = 12; // –£—Ä–æ–Ω –≤—ñ–¥ –≤–æ–≥–Ω—é –∑–∞ —Ö—ñ–¥
    private static final int FIRE_DURATION = 4; // –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –≥–æ—Ä—ñ–Ω–Ω—è
    private static final double SELF_BUFF_THRESHOLD = 0.5; // –ü—Ä–∏ 50% HP
    private static final double SELF_BUFF_POWER = 0.25; // +25% —É—Ä–æ–Ω—É
    private static final int SELF_BUFF_DURATION = 4;
    
    private boolean selfBuffUsed = false; // –ß–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ —Å–∞–º–æ–ø—ñ–¥—Å–∏–ª–µ–Ω–Ω—è
    
    public PyromancerDroid(String name) {
        // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: —Å–µ—Ä–µ–¥–Ω—ñ–π —É—Ä–æ–Ω, —Å–µ—Ä–µ–¥–Ω—î HP, –≤–∏—Å–æ–∫–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å, —Å–µ—Ä–µ–¥–Ω—è —à–≤–∏–¥–∫—ñ—Å—Ç—å
        super(name, 110, 28, 0.88, 14);
    }
    
    @Override
    protected int applySpecialAttackAbility(int damage, Droid target) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–∞–º–æ–ø—ñ–¥—Å–∏–ª–µ–Ω–Ω—è –ø—Ä–∏ –Ω–∏–∑—å–∫–æ–º—É HP
        if (!selfBuffUsed && health < maxHealth * SELF_BUFF_THRESHOLD) {
            DamageBuffEffect buff = new DamageBuffEffect(SELF_BUFF_DURATION, SELF_BUFF_POWER);
            this.applyEffect(buff);
            selfBuffUsed = true;
            System.out.println(name + " –≤—Ö–æ–¥–∏—Ç—å –≤ –í–û–ì–ù–Ø–ù–£ –õ–Æ–¢–¨! (+25% —É—Ä–æ–Ω—É)");
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–ø–∞–ª–µ–Ω–Ω—è —Ü—ñ–ª—ñ
        if (random.nextDouble() < FIRE_CHANCE) {
            FireEffect fire = new FireEffect(FIRE_DURATION, FIRE_DAMAGE);
            target.applyEffect(fire);
            System.out.println(name + " –ü–Ü–î–ü–ê–õ–Æ–Ñ " + target.getName() + "!");
        }
        
        return damage;
    }
    
    @Override
    protected int applySpecialDefenseAbility(int incomingDamage) {
        // –ü—ñ—Ä–æ–º–∞–Ω—Ç —Å—Ç—ñ–π–∫–∏–π –¥–æ –≤–æ–≥–Ω—é - –∑–º–µ–Ω—à—É—î —É—Ä–æ–Ω –≤—ñ–¥ –≤–æ–≥–Ω—è–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤
        // –¶—è –ª–æ–≥—ñ–∫–∞ –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ –≤ —Å–∏—Å—Ç–µ–º—ñ –±–æ—é
        return incomingDamage;
    }
    
    /**
     * –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –∞—Ç–∞–∫–∞ - –≤–æ–≥–Ω—è–Ω–∏–π –≤–∏–±—É—Ö
     * –ì–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –ø—ñ–¥–ø–∞–ª—é—î —Ü—ñ–ª—å —Ç–∞ –∑–∞–≤–¥–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —É—Ä–æ–Ω
     */
    public void fireBlast(Droid target) {
        System.out.println(name + " –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –í–û–ì–ù–Ø–ù–ò–ô –í–ò–ë–£–•!");
        
        // –û–±—á–∏—Å–ª—é—î–º–æ —É—Ä–æ–Ω –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ç–æ—á–Ω–æ—Å—Ç—ñ
        double accuracyRoll = random.nextDouble();
        double effectiveAccuracy = Math.max(accuracy, accuracyRoll);
        int finalDamage = (int) (getModifiedDamage() * 1.3 * effectiveAccuracy); // +30% —É—Ä–æ–Ω—É
        
        // –ì–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–µ –ø—ñ–¥–ø–∞–ª–µ–Ω–Ω—è –∑ –±—ñ–ª—å—à–∏–º —É—Ä–æ–Ω–æ–º
        FireEffect strongFire = new FireEffect(FIRE_DURATION + 1, FIRE_DAMAGE + 5, 0.25);
        target.applyEffect(strongFire);
        
        int actualDamage = target.takeDamage(finalDamage);
        System.out.println(name + " –∑–∞–≤–¥–∞—î " + actualDamage + " –≤–æ–≥–Ω—è–Ω–æ–≥–æ —É—Ä–æ–Ω—É —Ç–∞ –°–ò–õ–¨–ù–û –ü–Ü–î–ü–ê–õ–Æ–Ñ " + target.getName() + "!");
    }
    
    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º–æ–∂–µ –ø—ñ—Ä–æ–º–∞–Ω—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—É –∞—Ç–∞–∫—É
     */
    public boolean canUseFireBlast() {
        // –°–ø–µ—Ü—ñ–∞–ª—å–Ω—É –∞—Ç–∞–∫—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —è–∫—â–æ —î –º–∞–Ω–∞/–µ–Ω–µ—Ä–≥—ñ—è (—Å–ø—Ä–æ—â–µ–Ω–∞ –ª–æ–≥—ñ–∫–∞)
        return isAlive() && health > 20;
    }
    
    /**
     * –°–∫–∏–¥–∞—î —Å—Ç–∞–Ω —Å–∞–º–æ–ø—ñ–¥—Å–∏–ª–µ–Ω–Ω—è (–¥–ª—è –Ω–æ–≤–∏—Ö –±–æ—ó–≤)
     */
    public void resetSelfBuff() {
        selfBuffUsed = false;
    }
    
    @Override
    public String getInfo() {
        String baseInfo = super.getInfo();
        StringBuilder additionalInfo = new StringBuilder(baseInfo);
        
        additionalInfo.append("\n  –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∑–¥—ñ–±–Ω–æ—Å—Ç—ñ:");
        additionalInfo.append(String.format("\n  - –ü—ñ–¥–ø–∞–ª–µ–Ω–Ω—è: %.0f%% —à–∞–Ω—Å –ø—ñ–¥–ø–∞–ª–∏—Ç–∏ —Ü—ñ–ª—å (%d —É—Ä–æ–Ω—É –∑–∞ %d —Ö–æ–¥–∏)", 
                            FIRE_CHANCE * 100, FIRE_DAMAGE, FIRE_DURATION));
        additionalInfo.append(String.format("\n  - –í–æ–≥–Ω—è–Ω–∞ –ª—é—Ç—å: +%.0f%% —É—Ä–æ–Ω—É –ø—Ä–∏ HP < %.0f%% (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ)", 
                            SELF_BUFF_POWER * 100, SELF_BUFF_THRESHOLD * 100));
        additionalInfo.append("\n  - –í–æ–≥–Ω—è–Ω–∏–π –≤–∏–±—É—Ö: —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –∞—Ç–∞–∫–∞ –∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–∏–º –ø—ñ–¥–ø–∞–ª–µ–Ω–Ω—è–º");
        
        if (!selfBuffUsed && health < maxHealth * SELF_BUFF_THRESHOLD) {
            additionalInfo.append("\n  üî• –ì–û–¢–û–í–ò–ô –î–û –í–û–ì–ù–Ø–ù–û–á –õ–Æ–¢–Ü!");
        }
        
        return additionalInfo.toString();
    }
}